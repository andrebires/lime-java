package org.limeprotocol.messaging.contents;

import org.limeprotocol.DocumentBase;
import org.limeprotocol.MediaType;

import java.math.BigDecimal;
import java.util.Date;

/**
 * Defines a receipt for an invoice payment.
 */
public class PaymentReceipt extends DocumentBase {

    public static final String MIME_TYPE = "application/vnd.lime.payment-receipt+json";

    private String invoiceNumber;
    private PaymentMethod method;
    private String code;
    private Date paidOn;
    private String currency;
    private BigDecimal taxes;
    private BigDecimal total;

    public PaymentReceipt() {
        super(MediaType.parse(MIME_TYPE));
    }

    /**
     * Gets the original invoice number.
     * @return
     */
    public String getInvoiceNumber() {
        return invoiceNumber;
    }

    /**
     * Sets the original invoice number.
     * @param invoiceNumber
     */
    public void setInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
    }

    /**
     * Gets the payment method used in the payment.
     * @return
     */
    public PaymentMethod getMethod() {
        return method;
    }

    /**
     * Sets the payment method used in the payment.
     * @param method
     */
    public void setMethod(PaymentMethod method) {
        this.method = method;
    }

    /**
     * Gets the payment code identifier generated by the method.
     * @return
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the payment code identifier generated by the method.
     * @param code
     */
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Gets the payment date.
     * @return
     */
    public Date getPaidOn() {
        return paidOn;
    }

    /**
     * Sets the payment date.
     * @param paidOn
     */
    public void setPaidOn(Date paidOn) {
        this.paidOn = paidOn;
    }

    /**
     * Gets the receipt currency code related to the values.
     * @return
     */
    public String getCurrency() {
        return currency;
    }

    /**
     * Sets the receipt currency code related to the values.
     * @param currency
     */
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Gets the receipt total taxes value.
     * @return
     */
    public BigDecimal getTaxes() {
        return taxes;
    }

    /**
     * Sets the receipt total taxes value.
     * @param taxes
     */
    public void setTaxes(BigDecimal taxes) {
        this.taxes = taxes;
    }

    /**
     * Gets the receipt total value, including taxes.
     * @return
     */
    public BigDecimal getTotal() {
        return total;
    }

    /**
     * Sets the receipt total value, including taxes.
     * @param total
     */
    public void setTotal(BigDecimal total) {
        this.total = total;
    }
}
